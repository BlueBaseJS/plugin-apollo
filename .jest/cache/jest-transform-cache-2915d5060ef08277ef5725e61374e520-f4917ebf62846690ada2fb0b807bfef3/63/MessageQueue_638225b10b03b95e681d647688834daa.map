{"version":3,"sources":["MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","MessageQueue","_lazyCallableModules","_queue","_successCallbacks","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","now","_immediatesCallback","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","callFunctionReturnResultAndFlushedQueue","flushedQueue","invokeCallbackAndReturnFlushedQueue","module","method","args","__guard","__callFunction","result","cbID","__invokeCallback","__callImmediates","queue","length","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","isValidArgument","val","t","Array","isArray","every","k","nativeFlushQueueImmediate","counterEvent","__spy","isFinite","type","methods","fn","__shouldPauseOnThrow","error","reportFatalError","DebuggerInternal","shouldPauseOnThrow","beginEvent","endEvent","moduleMethods","getCallableModule","apply","callID","isSuccess","callback","debug","errorMessage","profileName","spyOrToggle","prototype","info","console","log","JSON","stringify","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  args: any[],\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\n// eslint-disable-next-line no-bitwise\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [number[], number[], any[], number];\n  _successCallbacks: {[key: number]: ?Function};\n  _failureCallbacks: {[key: number]: ?Function};\n  _callID: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n  _immediatesCallback: ?() => void;\n\n  _debugInfo: {[number]: [number, number]};\n  _remoteModuleTable: {[number]: string};\n  _remoteMethodTable: {[number]: string[]};\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = {};\n    this._failureCallbacks = {};\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = Date.now();\n    this._immediatesCallback = null;\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this: any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(\n      this,\n    );\n    (this: any).callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(\n      this,\n    );\n    (this: any).flushedQueue = this.flushedQueue.bind(this);\n    (this: any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(\n      this,\n    );\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(module: string, method: string, args: any[]) {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  callFunctionReturnResultAndFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ) {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  }\n\n  invokeCallbackAndReturnFlushedQueue(cbID: number, args: any[]) {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue() {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime() {\n    return Date.now() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      // eslint-disable-next-line no-bitwise\n      onFail && params.push(this._callID << 1);\n      // eslint-disable-next-line no-bitwise\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Validate that parameters passed over the bridge are\n      // folly-convertible.  As a special case, if a prop value is a\n      // function it is permitted here, and special-cased in the\n      // conversion.\n      const isValidArgument = val => {\n        const t = typeof val;\n        if (\n          t === 'undefined' ||\n          t === 'null' ||\n          t === 'boolean' ||\n          t === 'number' ||\n          t === 'string'\n        ) {\n          return true;\n        }\n        if (t === 'function' || t !== 'object') {\n          return false;\n        }\n        if (Array.isArray(val)) {\n          return val.every(isValidArgument);\n        }\n        for (const k in val) {\n          if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n            return false;\n          }\n        }\n        return true;\n      };\n\n      invariant(\n        isValidArgument(params),\n        '%s is not usable as a native method argument',\n        params,\n      );\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = Date.now();\n    if (\n      global.nativeFlushQueueImmediate &&\n      now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS\n    ) {\n      const queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: this._remoteModuleTable[moduleID],\n        method: this._remoteMethodTable[moduleID][methodID],\n        args: params,\n      });\n    } else if (this.__spy) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: moduleID + '',\n        method: methodID,\n        args: params,\n      });\n    }\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: string[]) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  // For JSTimers to register its callback. Otherwise a circular dependency\n  // between modules is introduced. Note that only one callback may be\n  // registered at a time.\n  setImmediatesCallback(fn: () => void) {\n    this._immediatesCallback = fn;\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    if (this.__shouldPauseOnThrow()) {\n      fn();\n    } else {\n      try {\n        fn();\n      } catch (error) {\n        ErrorUtils.reportFatalError(error);\n      }\n    }\n  }\n\n  // MessageQueue installs a global handler to catch all exceptions where JS users can register their own behavior\n  // This handler makes all exceptions to be propagated from inside MessageQueue rather than by the VM at their origin\n  // This makes stacktraces to be placed at MessageQueue rather than at where they were launched\n  // The parameter DebuggerInternal.shouldPauseOnThrow is used to check before catching all exceptions and\n  // can be configured by the VM or any Inspector\n  __shouldPauseOnThrow() {\n    return (\n      // $FlowFixMe\n      typeof DebuggerInternal !== 'undefined' &&\n      DebuggerInternal.shouldPauseOnThrow === true // eslint-disable-line no-undef\n    );\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (this._immediatesCallback != null) {\n      this._immediatesCallback();\n    }\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: any[]): any {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n    if (__DEV__ || this.__spy) {\n      Systrace.beginEvent(`${module}.${method}(${stringifySafe(args)})`);\n    } else {\n      Systrace.beginEvent(`${module}.${method}(...)`);\n    }\n    if (this.__spy) {\n      this.__spy({type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: any[]) {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    // eslint-disable-next-line no-bitwise\n    const callID = cbID >>> 1;\n    // eslint-disable-next-line no-bitwise\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks[callID]\n      : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage =\n            `The callback ${method}() exists in module ${module}, ` +\n            'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(callback, errorMessage);\n      }\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID;\n      if (callback && this.__spy) {\n        this.__spy({type: TO_JS, module: null, method: profileName, args});\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    delete this._successCallbacks[callID];\n    delete this._failureCallbacks[callID];\n    callback(...args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}