baefdf20e532d9a7666bddaf8a6f4c07
'use strict';

var ColorPropType = require('ColorPropType');

var EdgeInsetsPropType = require('EdgeInsetsPropType');

var PropTypes = require('prop-types');

var StyleSheetPropType = require('StyleSheetPropType');

var TextStylePropTypes = require('TextStylePropTypes');

var stylePropType = StyleSheetPropType(TextStylePropTypes);
module.exports = {
  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
  numberOfLines: PropTypes.number,
  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
  onLayout: PropTypes.func,
  onPress: PropTypes.func,
  onLongPress: PropTypes.func,
  pressRetentionOffset: EdgeInsetsPropType,
  selectable: PropTypes.bool,
  selectionColor: ColorPropType,
  suppressHighlighting: PropTypes.bool,
  style: stylePropType,
  testID: PropTypes.string,
  nativeID: PropTypes.string,
  allowFontScaling: PropTypes.bool,
  accessible: PropTypes.bool,
  adjustsFontSizeToFit: PropTypes.bool,
  minimumFontScale: PropTypes.number,
  disabled: PropTypes.bool
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRleHRQcm9wVHlwZXMuanMiXSwibmFtZXMiOlsiQ29sb3JQcm9wVHlwZSIsInJlcXVpcmUiLCJFZGdlSW5zZXRzUHJvcFR5cGUiLCJQcm9wVHlwZXMiLCJTdHlsZVNoZWV0UHJvcFR5cGUiLCJUZXh0U3R5bGVQcm9wVHlwZXMiLCJzdHlsZVByb3BUeXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImVsbGlwc2l6ZU1vZGUiLCJvbmVPZiIsIm51bWJlck9mTGluZXMiLCJudW1iZXIiLCJ0ZXh0QnJlYWtTdHJhdGVneSIsIm9uTGF5b3V0IiwiZnVuYyIsIm9uUHJlc3MiLCJvbkxvbmdQcmVzcyIsInByZXNzUmV0ZW50aW9uT2Zmc2V0Iiwic2VsZWN0YWJsZSIsImJvb2wiLCJzZWxlY3Rpb25Db2xvciIsInN1cHByZXNzSGlnaGxpZ2h0aW5nIiwic3R5bGUiLCJ0ZXN0SUQiLCJzdHJpbmciLCJuYXRpdmVJRCIsImFsbG93Rm9udFNjYWxpbmciLCJhY2Nlc3NpYmxlIiwiYWRqdXN0c0ZvbnRTaXplVG9GaXQiLCJtaW5pbXVtRm9udFNjYWxlIiwiZGlzYWJsZWQiXSwibWFwcGluZ3MiOiJBQVVBOztBQUVBLElBQU1BLGFBQWEsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBN0I7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUFsQzs7QUFDQSxJQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQUNBLElBQU1HLGtCQUFrQixHQUFHSCxPQUFPLENBQUMsb0JBQUQsQ0FBbEM7O0FBQ0EsSUFBTUksa0JBQWtCLEdBQUdKLE9BQU8sQ0FBQyxvQkFBRCxDQUFsQzs7QUFFQSxJQUFNSyxhQUFhLEdBQUdGLGtCQUFrQixDQUFDQyxrQkFBRCxDQUF4QztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFPZkMsRUFBQUEsYUFBYSxFQUFFTixTQUFTLENBQUNPLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixNQUFuQixFQUEyQixNQUEzQixDQUFoQixDQVBBO0FBYWZDLEVBQUFBLGFBQWEsRUFBRVIsU0FBUyxDQUFDUyxNQWJWO0FBbUJmQyxFQUFBQSxpQkFBaUIsRUFBRVYsU0FBUyxDQUFDTyxLQUFWLENBQWdCLENBQUMsUUFBRCxFQUFXLGFBQVgsRUFBMEIsVUFBMUIsQ0FBaEIsQ0FuQko7QUF5QmZJLEVBQUFBLFFBQVEsRUFBRVgsU0FBUyxDQUFDWSxJQXpCTDtBQStCZkMsRUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUNZLElBL0JKO0FBcUNmRSxFQUFBQSxXQUFXLEVBQUVkLFNBQVMsQ0FBQ1ksSUFyQ1I7QUE0Q2ZHLEVBQUFBLG9CQUFvQixFQUFFaEIsa0JBNUNQO0FBa0RmaUIsRUFBQUEsVUFBVSxFQUFFaEIsU0FBUyxDQUFDaUIsSUFsRFA7QUF3RGZDLEVBQUFBLGNBQWMsRUFBRXJCLGFBeEREO0FBOERmc0IsRUFBQUEsb0JBQW9CLEVBQUVuQixTQUFTLENBQUNpQixJQTlEakI7QUErRGZHLEVBQUFBLEtBQUssRUFBRWpCLGFBL0RRO0FBcUVma0IsRUFBQUEsTUFBTSxFQUFFckIsU0FBUyxDQUFDc0IsTUFyRUg7QUEyRWZDLEVBQUFBLFFBQVEsRUFBRXZCLFNBQVMsQ0FBQ3NCLE1BM0VMO0FBaUZmRSxFQUFBQSxnQkFBZ0IsRUFBRXhCLFNBQVMsQ0FBQ2lCLElBakZiO0FBdUZmUSxFQUFBQSxVQUFVLEVBQUV6QixTQUFTLENBQUNpQixJQXZGUDtBQTZGZlMsRUFBQUEsb0JBQW9CLEVBQUUxQixTQUFTLENBQUNpQixJQTdGakI7QUFtR2ZVLEVBQUFBLGdCQUFnQixFQUFFM0IsU0FBUyxDQUFDUyxNQW5HYjtBQXlHZm1CLEVBQUFBLFFBQVEsRUFBRTVCLFNBQVMsQ0FBQ2lCO0FBekdMLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29sb3JQcm9wVHlwZSA9IHJlcXVpcmUoJ0NvbG9yUHJvcFR5cGUnKTtcbmNvbnN0IEVkZ2VJbnNldHNQcm9wVHlwZSA9IHJlcXVpcmUoJ0VkZ2VJbnNldHNQcm9wVHlwZScpO1xuY29uc3QgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuY29uc3QgU3R5bGVTaGVldFByb3BUeXBlID0gcmVxdWlyZSgnU3R5bGVTaGVldFByb3BUeXBlJyk7XG5jb25zdCBUZXh0U3R5bGVQcm9wVHlwZXMgPSByZXF1aXJlKCdUZXh0U3R5bGVQcm9wVHlwZXMnKTtcblxuY29uc3Qgc3R5bGVQcm9wVHlwZSA9IFN0eWxlU2hlZXRQcm9wVHlwZShUZXh0U3R5bGVQcm9wVHlwZXMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLyoqXG4gICAqIFdoZW4gYG51bWJlck9mTGluZXNgIGlzIHNldCwgdGhpcyBwcm9wIGRlZmluZXMgaG93IHRleHQgd2lsbCBiZVxuICAgKiB0cnVuY2F0ZWQuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjZWxsaXBzaXplbW9kZVxuICAgKi9cbiAgZWxsaXBzaXplTW9kZTogUHJvcFR5cGVzLm9uZU9mKFsnaGVhZCcsICdtaWRkbGUnLCAndGFpbCcsICdjbGlwJ10pLFxuICAvKipcbiAgICogVXNlZCB0byB0cnVuY2F0ZSB0aGUgdGV4dCB3aXRoIGFuIGVsbGlwc2lzLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdGV4dC5odG1sI251bWJlcm9mbGluZXNcbiAgICovXG4gIG51bWJlck9mTGluZXM6IFByb3BUeXBlcy5udW1iZXIsXG4gIC8qKlxuICAgKiBTZXQgdGV4dCBicmVhayBzdHJhdGVneSBvbiBBbmRyb2lkLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdGV4dC5odG1sI3RleHRicmVha3N0cmF0ZWd5XG4gICAqL1xuICB0ZXh0QnJlYWtTdHJhdGVneTogUHJvcFR5cGVzLm9uZU9mKFsnc2ltcGxlJywgJ2hpZ2hRdWFsaXR5JywgJ2JhbGFuY2VkJ10pLFxuICAvKipcbiAgICogSW52b2tlZCBvbiBtb3VudCBhbmQgbGF5b3V0IGNoYW5nZXMuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjb25sYXlvdXRcbiAgICovXG4gIG9uTGF5b3V0OiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIHByZXNzLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdGV4dC5odG1sI29ucHJlc3NcbiAgICovXG4gIG9uUHJlc3M6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgb24gbG9uZyBwcmVzcy5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHQuaHRtbCNvbmxvbmdwcmVzc1xuICAgKi9cbiAgb25Mb25nUHJlc3M6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogRGVmaW5lcyBob3cgZmFyIHlvdXIgdG91Y2ggbWF5IG1vdmUgb2ZmIG9mIHRoZSBidXR0b24sIGJlZm9yZVxuICAgKiBkZWFjdGl2YXRpbmcgdGhlIGJ1dHRvbi5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHQuaHRtbCNwcmVzc3JldGVudGlvbm9mZnNldFxuICAgKi9cbiAgcHJlc3NSZXRlbnRpb25PZmZzZXQ6IEVkZ2VJbnNldHNQcm9wVHlwZSxcbiAgLyoqXG4gICAqIExldHMgdGhlIHVzZXIgc2VsZWN0IHRleHQuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjc2VsZWN0YWJsZVxuICAgKi9cbiAgc2VsZWN0YWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBUaGUgaGlnaGxpZ2h0IGNvbG9yIG9mIHRoZSB0ZXh0LlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdGV4dC5odG1sI3NlbGVjdGlvbmNvbG9yXG4gICAqL1xuICBzZWxlY3Rpb25Db2xvcjogQ29sb3JQcm9wVHlwZSxcbiAgLyoqXG4gICAqIFdoZW4gYHRydWVgLCBubyB2aXN1YWwgY2hhbmdlIGlzIG1hZGUgd2hlbiB0ZXh0IGlzIHByZXNzZWQgZG93bi5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHQuaHRtbCNzdXBwZXJoaWdobGlnaHRpbmdcbiAgICovXG4gIHN1cHByZXNzSGlnaGxpZ2h0aW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgc3R5bGU6IHN0eWxlUHJvcFR5cGUsXG4gIC8qKlxuICAgKiBVc2VkIHRvIGxvY2F0ZSB0aGlzIHZpZXcgaW4gZW5kLXRvLWVuZCB0ZXN0cy5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHQuaHRtbCN0ZXN0aWRcbiAgICovXG4gIHRlc3RJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFVzZWQgdG8gbG9jYXRlIHRoaXMgdmlldyBmcm9tIG5hdGl2ZSBjb2RlLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdGV4dC5odG1sI25hdGl2ZWlkXG4gICAqL1xuICBuYXRpdmVJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFdoZXRoZXIgZm9udHMgc2hvdWxkIHNjYWxlIHRvIHJlc3BlY3QgVGV4dCBTaXplIGFjY2Vzc2liaWxpdHkgc2V0dGluZ3MuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjYWxsb3dmb250c2NhbGluZ1xuICAgKi9cbiAgYWxsb3dGb250U2NhbGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgdmlldyBpcyBhbiBhY2Nlc3NpYmlsaXR5IGVsZW1lbnQuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjYWNjZXNzaWJsZVxuICAgKi9cbiAgYWNjZXNzaWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBXaGV0aGVyIGZvbnQgc2hvdWxkIGJlIHNjYWxlZCBkb3duIGF1dG9tYXRpY2FsbHkuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjYWRqdXN0c2ZvbnRzaXpldG9maXRcbiAgICovXG4gIGFkanVzdHNGb250U2l6ZVRvRml0OiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIFNtYWxsZXN0IHBvc3NpYmxlIHNjYWxlIGEgZm9udCBjYW4gcmVhY2guXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90ZXh0Lmh0bWwjbWluaW11bWZvbnRzY2FsZVxuICAgKi9cbiAgbWluaW11bUZvbnRTY2FsZTogUHJvcFR5cGVzLm51bWJlcixcbiAgLyoqXG4gICAqIFNwZWNpZmllcyB0aGUgZGlzYWJsZWQgc3RhdGUgb2YgdGhlIHRleHQgdmlldyBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL3RleHQuaHRtbCNkaXNhYmxlZFxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcbiJdfQ==