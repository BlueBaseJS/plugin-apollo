7098b57f9ebdbeae785ee94f54df7a24
'use strict';

var normalizeColor = require('normalizeColor');

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];

  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }

    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);
module.exports = ColorPropType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbG9yUHJvcFR5cGUuanMiXSwibmFtZXMiOlsibm9ybWFsaXplQ29sb3IiLCJyZXF1aXJlIiwiY29sb3JQcm9wVHlwZSIsImlzUmVxdWlyZWQiLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwiY29sb3IiLCJ1bmRlZmluZWQiLCJFcnJvciIsIkNvbG9yUHJvcFR5cGUiLCJiaW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBU0E7O0FBRUEsSUFBTUEsY0FBYyxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBOUI7O0FBRUEsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUNwQkMsVUFEb0IsRUFFcEJDLEtBRm9CLEVBR3BCQyxRQUhvQixFQUlwQkMsYUFKb0IsRUFLcEJDLFFBTG9CLEVBTXBCQyxZQU5vQixFQU9wQjtBQUNBLE1BQU1DLEtBQUssR0FBR0wsS0FBSyxDQUFDQyxRQUFELENBQW5COztBQUNBLE1BQUlJLEtBQUssS0FBS0MsU0FBVixJQUF1QkQsS0FBSyxLQUFLLElBQXJDLEVBQTJDO0FBQ3pDLFFBQUlOLFVBQUosRUFBZ0I7QUFDZCxhQUFPLElBQUlRLEtBQUosQ0FDTCxjQUNFSixRQURGLEdBRUUsSUFGRixJQUdHQyxZQUFZLElBQUlILFFBSG5CLElBSUUsMEJBSkYsR0FLRUMsYUFMRixHQU1FLElBUEcsQ0FBUDtBQVNEOztBQUNEO0FBQ0Q7O0FBRUQsTUFBSSxPQUFPRyxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBSTdCO0FBQ0Q7O0FBRUQsTUFBSVQsY0FBYyxDQUFDUyxLQUFELENBQWQsS0FBMEIsSUFBOUIsRUFBb0M7QUFDbEMsV0FBTyxJQUFJRSxLQUFKLENBQ0wsYUFDRUosUUFERixHQUVFLElBRkYsSUFHR0MsWUFBWSxJQUFJSCxRQUhuQixJQUlFLGlCQUpGLEdBS0VDLGFBTEYsR0FNRSxLQU5GLEdBT0VHLEtBUEYsR0FRRSxJQVJGLCtTQURLLENBQVA7QUF3QkQ7QUFDRixDQXpERDs7QUEyREEsSUFBTUcsYUFBYSxHQUFHVixhQUFhLENBQUNXLElBQWQsQ0FBbUIsSUFBbkIsRUFBeUIsS0FBekIsQ0FBdEI7QUFDQUQsYUFBYSxDQUFDVCxVQUFkLEdBQTJCRCxhQUFhLENBQUNXLElBQWQsQ0FBbUIsSUFBbkIsRUFBeUIsSUFBekIsQ0FBM0I7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxhQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3Qgbm9ybWFsaXplQ29sb3IgPSByZXF1aXJlKCdub3JtYWxpemVDb2xvcicpO1xuXG5jb25zdCBjb2xvclByb3BUeXBlID0gZnVuY3Rpb24oXG4gIGlzUmVxdWlyZWQsXG4gIHByb3BzLFxuICBwcm9wTmFtZSxcbiAgY29tcG9uZW50TmFtZSxcbiAgbG9jYXRpb24sXG4gIHByb3BGdWxsTmFtZSxcbikge1xuICBjb25zdCBjb2xvciA9IHByb3BzW3Byb3BOYW1lXTtcbiAgaWYgKGNvbG9yID09PSB1bmRlZmluZWQgfHwgY29sb3IgPT09IG51bGwpIHtcbiAgICBpZiAoaXNSZXF1aXJlZCkge1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICAgICAgJ1JlcXVpcmVkICcgK1xuICAgICAgICAgIGxvY2F0aW9uICtcbiAgICAgICAgICAnIGAnICtcbiAgICAgICAgICAocHJvcEZ1bGxOYW1lIHx8IHByb3BOYW1lKSArXG4gICAgICAgICAgJ2Agd2FzIG5vdCBzcGVjaWZpZWQgaW4gYCcgK1xuICAgICAgICAgIGNvbXBvbmVudE5hbWUgK1xuICAgICAgICAgICdgLicsXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodHlwZW9mIGNvbG9yID09PSAnbnVtYmVyJykge1xuICAgIC8vIERldmVsb3BlcnMgc2hvdWxkIG5vdCB1c2UgYSBudW1iZXIsIGJ1dCB3ZSBhcmUgdXNpbmcgdGhlIHByb3AgdHlwZVxuICAgIC8vIGJvdGggZm9yIHVzZXIgcHJvdmlkZWQgY29sb3JzIGFuZCBmb3IgdHJhbnNmb3JtZWQgb25lcy4gVGhpcyBpc24ndCBpZGVhbFxuICAgIC8vIGFuZCBzaG91bGQgYmUgZml4ZWQgYnV0IHdpbGwgZG8gZm9yIG5vdy4uLlxuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChub3JtYWxpemVDb2xvcihjb2xvcikgPT09IG51bGwpIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKFxuICAgICAgJ0ludmFsaWQgJyArXG4gICAgICAgIGxvY2F0aW9uICtcbiAgICAgICAgJyBgJyArXG4gICAgICAgIChwcm9wRnVsbE5hbWUgfHwgcHJvcE5hbWUpICtcbiAgICAgICAgJ2Agc3VwcGxpZWQgdG8gYCcgK1xuICAgICAgICBjb21wb25lbnROYW1lICtcbiAgICAgICAgJ2A6ICcgK1xuICAgICAgICBjb2xvciArXG4gICAgICAgICdcXG4nICtcbiAgICAgICAgYFZhbGlkIGNvbG9yIGZvcm1hdHMgYXJlXG4gIC0gJyNmMGYnICgjcmdiKVxuICAtICcjZjBmYycgKCNyZ2JhKVxuICAtICcjZmYwMGZmJyAoI3JyZ2diYilcbiAgLSAnI2ZmMDBmZjAwJyAoI3JyZ2diYmFhKVxuICAtICdyZ2IoMjU1LCAyNTUsIDI1NSknXG4gIC0gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMS4wKSdcbiAgLSAnaHNsKDM2MCwgMTAwJSwgMTAwJSknXG4gIC0gJ2hzbGEoMzYwLCAxMDAlLCAxMDAlLCAxLjApJ1xuICAtICd0cmFuc3BhcmVudCdcbiAgLSAncmVkJ1xuICAtIDB4ZmYwMGZmMDAgKDB4cnJnZ2JiYWEpXG5gLFxuICAgICk7XG4gIH1cbn07XG5cbmNvbnN0IENvbG9yUHJvcFR5cGUgPSBjb2xvclByb3BUeXBlLmJpbmQobnVsbCwgZmFsc2UgLyogaXNSZXF1aXJlZCAqLyk7XG5Db2xvclByb3BUeXBlLmlzUmVxdWlyZWQgPSBjb2xvclByb3BUeXBlLmJpbmQobnVsbCwgdHJ1ZSAvKiBpc1JlcXVpcmVkICovKTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb2xvclByb3BUeXBlO1xuIl19