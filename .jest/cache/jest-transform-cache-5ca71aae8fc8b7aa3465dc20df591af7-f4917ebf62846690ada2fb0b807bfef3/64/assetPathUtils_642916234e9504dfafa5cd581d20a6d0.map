{"version":3,"sources":["assetPathUtils.js"],"names":["getAndroidAssetSuffix","scale","Error","drawableFileTypes","Set","getAndroidResourceFolderName","asset","has","type","suffix","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":"AAUA;;AAQA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsD;AACpD,UAAQA,KAAR;AACE,SAAK,IAAL;AACE,aAAO,MAAP;;AACF,SAAK,CAAL;AACE,aAAO,MAAP;;AACF,SAAK,GAAL;AACE,aAAO,MAAP;;AACF,SAAK,CAAL;AACE,aAAO,OAAP;;AACF,SAAK,CAAL;AACE,aAAO,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,SAAP;AAZJ;;AAcA,QAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAGD,IAAMC,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAChC,KADgC,EAEhC,MAFgC,EAGhC,KAHgC,EAIhC,KAJgC,EAKhC,KALgC,EAMhC,MANgC,EAOhC,KAPgC,CAAR,CAA1B;;AAUA,SAASC,4BAAT,CAAsCC,KAAtC,EAA4DL,KAA5D,EAA2E;AACzE,MAAI,CAACE,iBAAiB,CAACI,GAAlB,CAAsBD,KAAK,CAACE,IAA5B,CAAL,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,MAAIC,MAAM,GAAGT,qBAAqB,CAACC,KAAD,CAAlC;;AACA,MAAI,CAACQ,MAAL,EAAa;AACX,UAAM,IAAIP,KAAJ,CACJ,gEACEQ,IAAI,CAACC,SAAL,CAAeL,KAAf,CAFE,CAAN;AAID;;AACD,MAAMM,aAAa,GAAG,cAAcH,MAApC;AACA,SAAOG,aAAP;AACD;;AAED,SAASC,4BAAT,CAAsCP,KAAtC,EAA4D;AAC1D,MAAIQ,UAAU,GAAGC,WAAW,CAACT,KAAD,CAA5B;AACA,SAAO,CAACQ,UAAU,GAAG,GAAb,GAAmBR,KAAK,CAACU,IAA1B,EACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,EAEW,GAFX,EAGJA,OAHI,CAGI,eAHJ,EAGqB,EAHrB,EAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,CAAP;AAKD;;AAED,SAASH,WAAT,CAAqBT,KAArB,EAA2C;AACzC,MAAIa,QAAQ,GAAGb,KAAK,CAACc,kBAArB;;AACA,MAAID,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACvBA,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAAX;AACD;;AACD,SAAOF,QAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,qBAAqB,EAAEA,qBADR;AAEfK,EAAAA,4BAA4B,EAAEA,4BAFf;AAGfQ,EAAAA,4BAA4B,EAAEA,4BAHf;AAIfE,EAAAA,WAAW,EAAEA;AAJE,CAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75:\n      return 'ldpi';\n    case 1:\n      return 'mdpi';\n    case 1.5:\n      return 'hdpi';\n    case 2:\n      return 'xhdpi';\n    case 3:\n      return 'xxhdpi';\n    case 4:\n      return 'xxxhdpi';\n  }\n  throw new Error('no such scale');\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(asset: PackagerAsset, scale: number) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      \"Don't know which android drawable suffix to use for asset: \" +\n        JSON.stringify(asset),\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_') // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n    .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath,\n};\n"]}