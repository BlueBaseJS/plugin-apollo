{"version":3,"sources":["/home/muzzamil/Documents/apollo/plugin-apollo/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AAEA,OAAA,CAAA,OAAA,GAAe,MAAA,CAAA,YAAA,CAAa;AAC3B,EAAA,WAAW,EAAE,4DADc;AAE3B,EAAA,GAAG,EAAE,yBAFsB;AAG3B,EAAA,IAAI,EAAE,eAHqB;AAI3B,EAAA,OAAO,EAAE,OAJkB;AAM3B,EAAA,UAAU,EAAE;AACX,IAAA,cAAc,EAAd,cAAA,CAAA,cADW;AAEX,IAAA,eAAe,EAAE,cAAA,CAAA,QAFN;AAGX,IAAA,YAAY,EAAE,cAAA,CAAA,KAHH;AAIX,IAAA,mBAAmB,EAAE,cAAA,CAAA;AAJV,GANe;AAY3B,EAAA,cAAc,EAAE;AACf,mCAA+B,EADhB;AAEf,qCAAiC;AAFlB,GAZW;AAgB3B,EAAA,OAAO,EAAE;AACR,yBAAqB,yBAAO,WAAP,EAAiC,IAAjC,EAA4C,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,cAAA,eADc,GACI,EAAE,CAAC,OAAH,CAAW,QAAX,CAAoB,gCAApB,CADJ;AAEd,cAAA,aAFc,GAEE,EAAE,CAAC,OAAH,CAAW,QAAX,CAAoB,8BAApB,CAFF;;AAAA,kBAGf,eAHe;AAAA;AAAA;AAAA;;AAAA,oBAIb,IAAI,KAAJ,CAAU,sCAAV,CAJa;;AAAA;AAOd,cAAA,QAPc,GAOH,IAAI,kBAAA,CAAA,QAAJ,CAAa,eAAb,CAPG;AAAA;AAAA,gDAQA,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,qBAAf,EAAsC,CAAC,QAAD,CAAtC,CARA;;AAAA;AAQd,cAAA,KARc;AAAA;AAAA,gDASA,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,qBAAf,EAAsC,IAAI,uBAAA,CAAA,aAAJ,EAAtC,CATA;;AAAA;AASd,cAAA,KATc;AAWd,cAAA,MAXc,GAWa,IAAI,eAAA,CAAA,YAAJ,CAAgB,uBAAA;AAChD,gBAAA,KAAK,EAAL,KADgD;AAEhD,gBAAA,IAAI,EAAE,aAAA,CAAA,UAAA,CAAW,IAAX,CAAgB,KAAhB;AAF0C,eAAA,EAG7C,aAH6C,CAAhB,CAXb;AAiBpB,cAAA,EAAE,CAAC,UAAH,CAAc,OAAd,CAAsB,iBAAtB,EAAyC,oBAAA,CAAA,OAAA,CAAmB,MAAnB,CAAzC;AAjBoB,+CAkBb,WAlBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADb;AAhBkB,CAAb,CAAf","sourcesContent":["import { ApolloConsumer, Mutation, Query, Subscription } from 'react-apollo';\nimport { BlueBase, BootOptions, createPlugin } from '@bluebase/core';\n\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport withApolloProvider from './withApolloProvider';\n\nexport default createPlugin({\n\tdescription: '🌍 A BlueBase Plugin that integrates Apollo GraphQL Client',\n\tkey: '@bluebase/plugin-apollo',\n\tname: 'Apollo Plugin',\n\tversion: '1.0.0',\n\n\tcomponents: {\n\t\tApolloConsumer,\n\t\tGraphqlMutation: Mutation,\n\t\tGraphqlQuery: Query,\n\t\tGraphqlSubscription: Subscription\n\t},\n\tdefaultConfigs: {\n\t\t'plugin.apollo.clientOptions': {},\n\t\t'plugin.apollo.httpLinkOptions': {}\n\t},\n\tfilters: {\n\t\t'bluebase.boot.end': async (bootOptions: BootOptions, _ctx: any, BB: BlueBase) => {\n\t\t\tconst httpLinkOptions = BB.Configs.getValue('plugins.apollo.httpLinkOptions');\n\t\t\tconst clientOptions = BB.Configs.getValue('plugins.apollo.clientOptions');\n\t\t\tif (!httpLinkOptions) {\n\t\t\t\tthrow new Error('HTTP Link URI not provided to Apollo');\n\t\t\t}\n\n\t\t\tconst httpLink = new HttpLink(httpLinkOptions);\n\t\t\tconst links = await BB.Filters.run('plugin.apollo.links', [httpLink]);\n\t\t\tconst cache = await BB.Filters.run('plugin.apollo.cache', new InMemoryCache());\n\n\t\t\tconst client: ApolloClient<{}> = new ApolloClient({\n\t\t\t\tcache,\n\t\t\t\tlink: ApolloLink.from(links),\n\t\t\t\t...clientOptions\n\t\t\t});\n\n\t\t\tBB.Components.addHocs('BlueBaseContent', withApolloProvider(client));\n\t\t\treturn bootOptions;\n\t\t},\n\t}\n});\n"]}