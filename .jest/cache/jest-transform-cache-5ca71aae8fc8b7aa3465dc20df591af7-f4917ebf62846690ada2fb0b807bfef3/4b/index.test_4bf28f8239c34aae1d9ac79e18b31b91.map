{"version":3,"sources":["/home/muzzamil/Documents/apollo/plugin-apollo/src/__tests__/index.test.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAM,UAAU,GAAG,SAAb,UAAa;AAAA,SAAM,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK,IAAL,EAAK,mBAAL,CAAN;AAAA,CAAnB;;AAEA,IAAI,CAAC,6BAAD,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B,UAAA,EAD6B,GACxB,IAAI,MAAA,CAAA,QAAJ,EADwB;AAAA;AAAA,4CAE7B,EAAE,CAAC,OAAH,CAAW,QAAX,CAAoB,OAAA,CAAA,OAApB,CAF6B;;AAAA;AAInC,UAAA,MAAM,CAAC,EAAE,CAAC,OAAH,CAAW,GAAX,CAAe,eAAf,CAAD,CAAN,CAAwC,UAAxC;;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC,CAAJ;AAQA,IAAI,CAAC,6BAAD,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7B,UAAA,OAF6B,GAEnB,QAAA,CAAA,KAAA,CACf,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,WAAD,EAAY;AAAC,YAAA,OAAO,EAAE,CAAC,OAAA,CAAA,OAAD;AAAV,WAAZ,EACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CADD,CADe,CAFmB;AAQnC,UAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,eAAhB;;AARmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC,CAAJ","sourcesContent":["import { BlueBase, BlueBaseApp } from '@bluebase/core';\nimport Plugin from '../index';\nimport { Text } from 'react-native';\n// import WithApolloProvider from '../withApolloProvider';\nimport React from 'react';\nimport { mount } from 'enzyme';\n\nconst CustomText = () => <Text>Everything is ok!</Text>;\n\ntest('Plugin correctly registered', async () => {\n\tconst BB = new BlueBase();\n\tawait BB.Plugins.register(Plugin);\n\n\texpect(BB.Plugins.has('plugin-apollo')).toBeTruthy();\n});\n\n \ntest('Plugin correctly registered', async () => {\n\t\n\tconst wrapper = mount(\n\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t<CustomText />\n\t\t</BlueBaseApp>\n\t);\n\n\texpect(wrapper).toMatchSnapshot();\n});\n\n\n// let client:any;\n// test('Plugin should be correctly registered', async () => {\n\t \n// \t\t WithApolloProvider(client as any);\n// });\n\n\n\n\n\n// describe('Apollo Plugin test', () => {\n// \tit('Test with Apollo Config', async () => {\n\t\t\n// \t\tconst BB = new BlueBase();\n// \t\tawait BB.Plugins.register(Plugin);\n// \t\t// ApolloPlugin.getClient();\n// \t\tconst Plugins = await BB.Plugins.has(Plugin);\n// \t\tawait BB.Configs.setValue('plugins.apollo.httpLinkOptions', { uri: 'http://graphql' });\n\n// \t\t// renderer.create (\n// \t\t// \t<BB.Components.Query>)\n// \t\t// </BB.Components.Query>\n\n// \t\tBB.boot();\n// \t\tconsole.log('Plugins====>', BB.Configs.getValue('plugins.apollo.httpLinkOptions'));\n// \t\tconst httpLinkOptions = BB.Configs.getValue('plugins.apollo.httpLinkOptions');\n// \t\texpect(httpLinkOptions).toEqual({uri: 'http://graphql'});\n\t\t\n// \t});\n// });\n\n"]}